[{"D:\\React course\\Pratice E-commerce\\src\\index.js":"1","D:\\React course\\Pratice E-commerce\\src\\App.js":"2","D:\\React course\\Pratice E-commerce\\src\\pages\\ContactPage.js":"3","D:\\React course\\Pratice E-commerce\\src\\pages\\ProductsPage.js":"4","D:\\React course\\Pratice E-commerce\\src\\pages\\HomPage.js":"5","D:\\React course\\Pratice E-commerce\\src\\pages\\RegisterPage.js":"6","D:\\React course\\Pratice E-commerce\\src\\pages\\InformationPage.js":"7","D:\\React course\\Pratice E-commerce\\src\\components\\Layout\\Layout.js":"8","D:\\React course\\Pratice E-commerce\\src\\components\\Info\\Info.js":"9","D:\\React course\\Pratice E-commerce\\src\\components\\Footer\\Footer.js":"10","D:\\React course\\Pratice E-commerce\\src\\components\\Header\\Header.js":"11","D:\\React course\\Pratice E-commerce\\src\\components\\Header\\MobileUI.js":"12","D:\\React course\\Pratice E-commerce\\src\\components\\Header\\LoginButton.js":"13","D:\\React course\\Pratice E-commerce\\src\\components\\Products\\Products.js":"14","D:\\React course\\Pratice E-commerce\\src\\components\\Products\\ProductList.js":"15","D:\\React course\\Pratice E-commerce\\src\\components\\Products\\ProductItem.js":"16","D:\\React course\\Pratice E-commerce\\src\\components\\SelectedProduct\\SelectedProduct.js":"17","D:\\React course\\Pratice E-commerce\\src\\pages\\CartPage.js":"18","D:\\React course\\Pratice E-commerce\\src\\pages\\ProductDetailPage.js":"19","D:\\React course\\Pratice E-commerce\\src\\components\\Cart\\Cart.js":"20","D:\\React course\\Pratice E-commerce\\src\\components\\Cart\\CartItem.js":"21","D:\\React course\\Pratice E-commerce\\src\\store\\index.js":"22","D:\\React course\\Pratice E-commerce\\src\\components\\Login\\LoginModal.js":"23","D:\\React course\\Pratice E-commerce\\src\\components\\Login\\LoginForm.js":"24","D:\\React course\\Pratice E-commerce\\src\\components\\Contact\\Contact.js":"25","D:\\React course\\Pratice E-commerce\\src\\components\\Header\\UserAccount.js":"26","D:\\React course\\Pratice E-commerce\\src\\components\\Register\\RegisterDone.js":"27","D:\\React course\\Pratice E-commerce\\src\\components\\Register\\RegisterForm.js":"28"},{"size":588,"mtime":1663664561910,"results":"29","hashOfConfig":"30"},{"size":1020,"mtime":1663694986809,"results":"31","hashOfConfig":"30"},{"size":142,"mtime":1663608514794,"results":"32","hashOfConfig":"30"},{"size":214,"mtime":1663429298341,"results":"33","hashOfConfig":"30"},{"size":373,"mtime":1663351269248,"results":"34","hashOfConfig":"30"},{"size":480,"mtime":1665645385608,"results":"35","hashOfConfig":"30"},{"size":136,"mtime":1663147853418,"results":"36","hashOfConfig":"30"},{"size":283,"mtime":1663298589682,"results":"37","hashOfConfig":"30"},{"size":2668,"mtime":1666687028042,"results":"38","hashOfConfig":"30"},{"size":2261,"mtime":1666683931875,"results":"39","hashOfConfig":"30"},{"size":2504,"mtime":1666519231371,"results":"40","hashOfConfig":"30"},{"size":1310,"mtime":1663146625331,"results":"41","hashOfConfig":"30"},{"size":1331,"mtime":1663860839787,"results":"42","hashOfConfig":"30"},{"size":3834,"mtime":1666519847714,"results":"43","hashOfConfig":"30"},{"size":479,"mtime":1663394174670,"results":"44","hashOfConfig":"30"},{"size":730,"mtime":1666520577029,"results":"45","hashOfConfig":"30"},{"size":4637,"mtime":1663861059573,"results":"46","hashOfConfig":"30"},{"size":121,"mtime":1663431305823,"results":"47","hashOfConfig":"30"},{"size":185,"mtime":1663428706263,"results":"48","hashOfConfig":"30"},{"size":1688,"mtime":1665585332124,"results":"49","hashOfConfig":"30"},{"size":1667,"mtime":1665585337985,"results":"50","hashOfConfig":"30"},{"size":2190,"mtime":1665645331655,"results":"51","hashOfConfig":"30"},{"size":1011,"mtime":1663606586017,"results":"52","hashOfConfig":"30"},{"size":3912,"mtime":1665646400552,"results":"53","hashOfConfig":"30"},{"size":3454,"mtime":1666685410335,"results":"54","hashOfConfig":"30"},{"size":910,"mtime":1663834580978,"results":"55","hashOfConfig":"30"},{"size":371,"mtime":1665645121236,"results":"56","hashOfConfig":"30"},{"size":5343,"mtime":1665645401940,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1fhxhtt",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},"D:\\React course\\Pratice E-commerce\\src\\index.js",[],["122","123"],"D:\\React course\\Pratice E-commerce\\src\\App.js",[],"D:\\React course\\Pratice E-commerce\\src\\pages\\ContactPage.js",[],"D:\\React course\\Pratice E-commerce\\src\\pages\\ProductsPage.js",[],"D:\\React course\\Pratice E-commerce\\src\\pages\\HomPage.js",[],"D:\\React course\\Pratice E-commerce\\src\\pages\\RegisterPage.js",[],"D:\\React course\\Pratice E-commerce\\src\\pages\\InformationPage.js",[],"D:\\React course\\Pratice E-commerce\\src\\components\\Layout\\Layout.js",[],"D:\\React course\\Pratice E-commerce\\src\\components\\Info\\Info.js",["124","125","126","127"],"D:\\React course\\Pratice E-commerce\\src\\components\\Footer\\Footer.js",["128","129","130","131","132","133","134","135","136","137","138"],"D:\\React course\\Pratice E-commerce\\src\\components\\Header\\Header.js",[],"D:\\React course\\Pratice E-commerce\\src\\components\\Header\\MobileUI.js",[],"D:\\React course\\Pratice E-commerce\\src\\components\\Header\\LoginButton.js",[],"D:\\React course\\Pratice E-commerce\\src\\components\\Products\\Products.js",[],"D:\\React course\\Pratice E-commerce\\src\\components\\Products\\ProductList.js",[],"D:\\React course\\Pratice E-commerce\\src\\components\\Products\\ProductItem.js",["139"],"import { Link } from \"react-router-dom\";\r\nimport classes from \"./ProductItem.module.scss\";\r\nconst ProductItem = (props) => {\r\n  return (\r\n    <li className={classes.container}>\r\n      <div className={classes[\"products__card\"]}>\r\n        <div className={classes[\"products__img\"]}>\r\n          <img src={props.image} alt=\"image\" />\r\n        </div>\r\n        <div className={classes.action}>\r\n          <p className={classes[\"product__name\"]}>{props.title}</p>\r\n          <h5 className={classes[\"product__price\"]}>$ {props.price}</h5>\r\n          <Link className={classes[\"btn__buy\"]} to={`/products/${props.id}`}>\r\n            Buy now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nexport default ProductItem;\r\n","D:\\React course\\Pratice E-commerce\\src\\components\\SelectedProduct\\SelectedProduct.js",["140","141","142"],"import Skeleton from \"react-loading-skeleton\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport classes from \"./SelectedProduct.module.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { cartAction } from \"../../store\";\r\nlibrary.add(fas);\r\nlet initial = false;\r\nconst SelectedProduct = () => {\r\n  const isLogin = useSelector((state) => state.auth.isLogin);\r\n  const id = useSelector((state) => state.cart.id);\r\n  const items = useSelector((state) => state.cart.items);\r\n  const cart = useSelector((state) => state.cart.cart);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const [product, setProduct] = useState({});\r\n  const params = useParams();\r\n  const { productId } = params;\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  useEffect(() => {\r\n    const getSingleProduct = async () => {\r\n      setIsLoading(true);\r\n      const response = await fetch(\r\n        `https://fakestoreapi.com/products/${productId}`\r\n      );\r\n      const data = await response.json();\r\n      setIsLoading(false);\r\n      setProduct(data);\r\n    };\r\n    getSingleProduct();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!initial) {\r\n      initial = true;\r\n      return;\r\n    }\r\n    if (isLogin) {\r\n      const sendCart = async () => {\r\n        await fetch(\r\n          `https://react-http-9e6b9-default-rtdb.firebaseio.com/myCart/${id}/items.json`,\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify([0, ...items]),\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          }\r\n        );\r\n      };\r\n      sendCart();\r\n    }\r\n  }, [items]);\r\n  useEffect(() => {\r\n    if (isLogin) {\r\n      localStorage.setItem(\r\n        \"userAccount\",\r\n        JSON.stringify({ isLogin: true, showLoginForm: true })\r\n      );\r\n      localStorage.setItem(\"userCart\", JSON.stringify(cart));\r\n    }\r\n  }, [cart]);\r\n  const addToCartHandler = () => {\r\n    dispatch(\r\n      cartAction.addItem({\r\n        id: productId,\r\n        price: product.price,\r\n        name: product.title,\r\n        image: product.image,\r\n        amount: 1,\r\n      })\r\n    );\r\n    enqueueSnackbar(\"You have added an item\", { variant: \"info\" });\r\n  };\r\n  const Loading = (\r\n    <div className={classes.product}>\r\n      <div className={classes[\"product__preview\"]}>\r\n        <Skeleton height={200} width={200} />\r\n      </div>\r\n      <div className={classes[\"product__overview\"]}>\r\n        <h3 className={classes[\"product__category\"]}>\r\n          <Skeleton count={1} width={100} />\r\n        </h3>\r\n        <p className={classes[\"product__name\"]}>\r\n          <Skeleton count={1} width={400} />\r\n        </p>\r\n        <p className={classes[\"product__rating\"]}>\r\n          <Skeleton count={1} width={100} />\r\n        </p>\r\n        <h2 className={classes[\"product__price\"]}>\r\n          <Skeleton count={1} width={100} />\r\n        </h2>\r\n        <p className={classes[\"product__desc\"]}>\r\n          <Skeleton count={5} width={400} />\r\n        </p>\r\n        <div>\r\n          <Skeleton count={1} width={80} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  if (isLoading) {\r\n    return <div>{Loading}</div>;\r\n  }\r\n  return (\r\n    <div className={classes.product}>\r\n      <div className={classes[\"product__preview\"]}>\r\n        <img src={product.image} alt={product.title} />\r\n      </div>\r\n      <div className={classes[\"product__overview\"]}>\r\n        <h3 className={classes[\"product__category\"]}>{product.category}</h3>\r\n        <p className={classes[\"product__name\"]}>{product.title}</p>\r\n        <p className={classes[\"product__rating\"]}>\r\n          Rating {product.rating && product.rating.rate}{\" \"}\r\n          <FontAwesomeIcon\r\n            className={classes[\"rate__icon\"]}\r\n            icon=\"fa-solid fa-m fa-star\"\r\n          />\r\n        </p>\r\n        <h2 className={classes[\"product__price\"]}>$ {product.price}</h2>\r\n        <p className={classes[\"product__desc\"]}>{product.description}</p>\r\n        <div>\r\n          <button\r\n            className={classes[\"product__btn\"]}\r\n            onClick={addToCartHandler}\r\n          >\r\n            Add to Cart\r\n          </button>\r\n          <Link className={classes[\"product__link\"]} to=\"/cart\">\r\n            Go to Cart\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SelectedProduct;\r\n","D:\\React course\\Pratice E-commerce\\src\\pages\\CartPage.js",[],"D:\\React course\\Pratice E-commerce\\src\\pages\\ProductDetailPage.js",[],"D:\\React course\\Pratice E-commerce\\src\\components\\Cart\\Cart.js",["143","144"],"import classes from \"./Cart.module.scss\";\r\nimport CartItem from \"./CartItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nlet initial = false;\r\nconst Cart = () => {\r\n  const isLogin = useSelector((state) => state.auth.isLogin);\r\n  const items = useSelector((state) => state.cart.items);\r\n  const id = useSelector((state) => state.cart.id);\r\n  const totalPrice = items\r\n    .map((item) => item.amount * item.price)\r\n    .reduce((el, num) => el + num, 0)\r\n    .toFixed(2);\r\n  useEffect(() => {\r\n    if (!initial) {\r\n      initial = true;\r\n      return;\r\n    }\r\n    if (isLogin) {\r\n      const sendCart = async () => {\r\n        const response = await fetch(\r\n          `https://react-http-9e6b9-default-rtdb.firebaseio.com/myCart/${id}/items.json`,\r\n          {\r\n            method: \"PUT\",\r\n            body: JSON.stringify([0, ...items]),\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          }\r\n        );\r\n      };\r\n      sendCart();\r\n    }\r\n  }, [items]);\r\n  if (items.length === 0) {\r\n    return (\r\n      <main className={classes[\"main__cart\"]}>\r\n        <div className={classes.note}>Your cart is empty</div>\r\n      </main>\r\n    );\r\n  }\r\n  return (\r\n    <main className={classes[\"main__cart\"]}>\r\n      <ul className={classes[\"item__list\"]}>\r\n        {items.map((item) => (\r\n          <CartItem\r\n            key={item.id}\r\n            image={item.image}\r\n            price={item.price}\r\n            amount={item.amount}\r\n            name={item.name}\r\n            id={item.id}\r\n          />\r\n        ))}\r\n      </ul>\r\n\r\n      <div className={classes.total}>Total: $ {totalPrice}</div>\r\n    </main>\r\n  );\r\n};\r\nexport default Cart;\r\n","D:\\React course\\Pratice E-commerce\\src\\components\\Cart\\CartItem.js",["145","146"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { cartAction } from \"../../store\";\r\nimport classes from \"./CartItem.module.scss\";\r\nimport { useEffect } from \"react\";\r\nconst CartItem = (props) => {\r\n  const isLogin = useSelector((state) => state.auth.isLogin);\r\n  const cart = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n  const itemTotal = props.amount * props.price;\r\n  const formattedItemTotal = itemTotal.toFixed(2);\r\n  useEffect(() => {\r\n    if (isLogin) {\r\n      localStorage.setItem(\r\n        \"userAccount\",\r\n        JSON.stringify({ isLogin: true, showLoginForm: true })\r\n      );\r\n      localStorage.setItem(\"userCart\", JSON.stringify(cart));\r\n    }\r\n  }, [cart]);\r\n  const addItemHadnler = () => {\r\n    dispatch(\r\n      cartAction.addItem({\r\n        id: props.id,\r\n        image: props.image,\r\n        price: props.price,\r\n        name: props.name,\r\n        amount: 1,\r\n      })\r\n    );\r\n  };\r\n  const removeItemHandler = () => {\r\n    dispatch(cartAction.removeItem(props.id));\r\n  };\r\n  return (\r\n    <li className={classes.list}>\r\n      <div className={classes[\"image__container\"]}>\r\n        <img src={props.image} alt=\"image\" />\r\n      </div>\r\n      <div className={classes[\"item__info\"]}>\r\n        <p className={classes[\"item__name\"]}>{props.name}</p>\r\n        <p className={classes[\"item__price\"]}>\r\n          {props.amount} x $ {props.price}= ${formattedItemTotal}\r\n        </p>\r\n        <div className={classes.btn}>\r\n          <button onClick={removeItemHandler}>-</button>\r\n          <button onClick={addItemHadnler}>+</button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nexport default CartItem;\r\n","D:\\React course\\Pratice E-commerce\\src\\store\\index.js",[],"D:\\React course\\Pratice E-commerce\\src\\components\\Login\\LoginModal.js",[],"D:\\React course\\Pratice E-commerce\\src\\components\\Login\\LoginForm.js",["147","148"],"import { useState } from \"react\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authAction, cartAction } from \"../../store\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginForm = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const dispatch = useDispatch();\r\n\r\n  const validateForm = () => {\r\n    const msg = {};\r\n    const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if (email.trim() === \"\") {\r\n      msg.emailInput = \"*Please enter your email\";\r\n    } else if (!email.match(mailformat)) {\r\n      msg.emailInput = \"*Please enter a valid email address\";\r\n    }\r\n    if (password.trim() === \"\") {\r\n      msg.passwordInput = \"*Please enter your password\";\r\n    } else if (password.trim().length < 8) {\r\n      msg.passwordInput = \"*Please enter at least 8 characters\";\r\n    }\r\n    setErrorMsg(msg);\r\n    if (Object.keys(msg).length > 0) {\r\n      return false;\r\n    } else return true;\r\n  };\r\n  const submitLoginFormHandler = (event) => {\r\n    event.preventDefault();\r\n    const formIsValid = validateForm();\r\n    if (!formIsValid) return;\r\n    const signinHandlerFn = async () => {\r\n      const response = await fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC7mNCfEzs7oh9Jr9QIpk2XHc796oTFu1Y\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true,\r\n          }),\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n      if (!response.ok) {\r\n        const content = await response.json();\r\n        enqueueSnackbar(content.error.message, { variant: \"error\" });\r\n        await content.error.message;\r\n\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        return;\r\n      }\r\n      const data = await response.json();\r\n\r\n      dispatch(authAction.loginHandler(data.idToken));\r\n      const responseData = await fetch(\r\n        \"https://react-http-9e6b9-default-rtdb.firebaseio.com/myCart.json\"\r\n      );\r\n      const userData = await responseData.json();\r\n      let arr = [];\r\n      for (const key in userData) {\r\n        arr.push({ id: key, ...userData[key] });\r\n      }\r\n      const selectedElement = arr.filter((el) => el.email === email);\r\n      selectedElement[0].items.splice(0, 1);\r\n      dispatch(cartAction.updateCart(selectedElement[0]));\r\n      localStorage.setItem(\r\n        \"userAccount\",\r\n        JSON.stringify({ isLogin: true, showLoginForm: true })\r\n      );\r\n      localStorage.setItem(\"userCart\", JSON.stringify(selectedElement[0]));\r\n      navigate(\"/\");\r\n    };\r\n    signinHandlerFn();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitLoginFormHandler}>\r\n      <h3 className=\"form__title\">Login</h3>\r\n      <div className=\"mg\">\r\n        <label className=\"form__label\">Your email</label>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your username\"\r\n          value={email}\r\n          onChange={(event) => setEmail(event.target.value)}\r\n        />\r\n\r\n        <p className=\"form__errorMsg\">{errorMsg.emailInput}</p>\r\n      </div>\r\n      <div className=\"mg\">\r\n        <label className=\"form__label\">Password</label>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n        />\r\n\r\n        <p className=\"form__errorMsg\">{errorMsg.passwordInput}</p>\r\n      </div>\r\n      <button type=\"submit\" className=\"form__submit__btn\">\r\n        Sign in\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default LoginForm;\r\n","D:\\React course\\Pratice E-commerce\\src\\components\\Contact\\Contact.js",["149","150","151"],"D:\\React course\\Pratice E-commerce\\src\\components\\Header\\UserAccount.js",["152","153","154"],"import { useDispatch } from \"react-redux\";\r\nimport { authAction, cartAction } from \"../../store\";\r\nimport classes from \"./UserAccount.module.scss\";\r\nconst UserAccount = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutClickHandler = () => {\r\n    dispatch(authAction.logoutHandler());\r\n    dispatch(cartAction.clearCart());\r\n    localStorage.removeItem(\"userAccount\");\r\n    localStorage.removeItem(\"userCart\");\r\n  };\r\n  return (\r\n    <form className={classes[\"account__info\"]}>\r\n      <ul className={classes[\"account__list\"]}>\r\n        <li>\r\n          <a href=\"#\">My account</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">My order</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">My wishList</a>\r\n        </li>\r\n      </ul>\r\n      <p className={classes[\"account__logout\"]} onClick={logoutClickHandler}>\r\n        Logout\r\n      </p>\r\n    </form>\r\n  );\r\n};\r\nexport default UserAccount;\r\n","D:\\React course\\Pratice E-commerce\\src\\components\\Register\\RegisterDone.js",[],"D:\\React course\\Pratice E-commerce\\src\\components\\Register\\RegisterForm.js",["155","156"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport classes from \"./RegisterForm.module.scss\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { authAction } from \"../../store\";\r\nlibrary.add(fas);\r\nconst Register = () => {\r\n  const dispatch = useDispatch();\r\n  const nameInputRef = useRef();\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const cfPasswordInputRef = useRef();\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const validateForm = () => {\r\n    const name = nameInputRef.current.value;\r\n    const email = emailInputRef.current.value;\r\n    const password = passwordInputRef.current.value;\r\n    const cfPassword = cfPasswordInputRef.current.value;\r\n    let msg = {};\r\n    const mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if (name.trim().length === 0) {\r\n      msg.namePrompt = \"*Please enter your username\";\r\n    } else if (name.trim().split(\" \").length < 2) {\r\n      msg.namePrompt = \"*Please enter your full name (both first and last)\";\r\n    }\r\n\r\n    if (email.trim().length === 0) {\r\n      msg.emailPrompt = \"*Please enter your email\";\r\n    } else if (!email.match(mailformat)) {\r\n      msg.emailPrompt = \"*Please enter a valid email address\";\r\n    }\r\n    if (password.trim().length === 0) {\r\n      msg.passwordPrompt = \"*Please enter password\";\r\n    } else if (password.trim().length < 8) {\r\n      msg.passwordPrompt = \"*Please enter at least 8 characters\";\r\n    }\r\n    if (cfPassword.trim().length === 0) {\r\n      msg.cfPasswordPrompt = \"*Please enter confirmed password\";\r\n    } else if (cfPassword.trim() !== password.trim()) {\r\n      msg.cfPasswordPrompt = \"Please try again!\";\r\n    }\r\n    setErrMessage(msg);\r\n    if (Object.keys(msg).length > 0) {\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  const submitRegisterFormHandler = (event) => {\r\n    event.preventDefault();\r\n    const formIsValid = validateForm();\r\n    if (!formIsValid) return;\r\n    const signupAccountFn = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC7mNCfEzs7oh9Jr9QIpk2XHc796oTFu1Y\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              email: emailInputRef.current.value,\r\n              password: passwordInputRef.current.value,\r\n              returnSecureToken: true,\r\n            }),\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          const content = await response.json();\r\n          enqueueSnackbar(content.error.message, { variant: \"error\" });\r\n          alert(content.error.message);\r\n          return;\r\n        }\r\n        // send data to database\r\n        dispatch(authAction.registerHandler());\r\n        await fetch(\r\n          `https://react-http-9e6b9-default-rtdb.firebaseio.com/myCart.json`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              email: emailInputRef.current.value,\r\n              name: nameInputRef.current.value,\r\n              items: [0],\r\n            }),\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          }\r\n        );\r\n        enqueueSnackbar(\"Your account is registered successfully!\", {\r\n          variant: \"success\",\r\n        });\r\n      } catch (err) {}\r\n    };\r\n    signupAccountFn();\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={submitRegisterFormHandler}>\r\n      <div className={classes[\"icon__container\"]}>\r\n        <FontAwesomeIcon\r\n          className={classes.icon}\r\n          icon=\"fa-solid fa-circle-user\"\r\n        />\r\n      </div>\r\n      <div className=\"mg\">\r\n        <label className=\"form__label\">Your name</label>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your name\"\r\n          ref={nameInputRef}\r\n        />\r\n        <p className=\"form__errorMsg\">{errMessage.namePrompt}</p>\r\n      </div>\r\n      <div className=\"mg\">\r\n        <label className=\"form__label\">Your email</label>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          placeholder=\"Enter email\"\r\n          ref={emailInputRef}\r\n        />\r\n\r\n        <p className=\"form__errorMsg\">{errMessage.emailPrompt}</p>\r\n      </div>\r\n      <div className=\"mg\">\r\n        <label className=\"form__label\">Password</label>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          ref={passwordInputRef}\r\n        />\r\n\r\n        <p className=\"form__errorMsg\">{errMessage.passwordPrompt}</p>\r\n      </div>\r\n      <div className=\"mg\">\r\n        <label className=\"form__label\">Confirm password</label>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          ref={cfPasswordInputRef}\r\n        />\r\n\r\n        <p className=\"form__errorMsg\">{errMessage.cfPasswordPrompt}</p>\r\n      </div>\r\n      <button type=\"submit\" className=\"form__submit__btn\">\r\n        Create my account\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default Register;\r\n",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":5,"column":10,"nodeType":"163","messageId":"164","endLine":5,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":18,"column":11,"nodeType":"167","endLine":18,"endColumn":41},{"ruleId":"165","severity":1,"message":"166","line":21,"column":11,"nodeType":"167","endLine":21,"endColumn":41},{"ruleId":"165","severity":1,"message":"166","line":24,"column":11,"nodeType":"167","endLine":24,"endColumn":41},{"ruleId":"165","severity":1,"message":"166","line":14,"column":13,"nodeType":"167","endLine":14,"endColumn":42},{"ruleId":"168","severity":1,"message":"169","line":22,"column":17,"nodeType":"167","endLine":22,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":23,"column":17,"nodeType":"167","endLine":23,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":24,"column":17,"nodeType":"167","endLine":24,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":25,"column":17,"nodeType":"167","endLine":25,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":26,"column":17,"nodeType":"167","endLine":26,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":29,"column":17,"nodeType":"167","endLine":29,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":30,"column":17,"nodeType":"167","endLine":30,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":31,"column":17,"nodeType":"167","endLine":31,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":32,"column":17,"nodeType":"167","endLine":32,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":33,"column":17,"nodeType":"167","endLine":33,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":8,"column":11,"nodeType":"167","endLine":8,"endColumn":48},{"ruleId":"170","severity":1,"message":"171","line":36,"column":6,"nodeType":"172","endLine":36,"endColumn":8,"suggestions":"173"},{"ruleId":"170","severity":1,"message":"174","line":55,"column":6,"nodeType":"172","endLine":55,"endColumn":13,"suggestions":"175"},{"ruleId":"170","severity":1,"message":"176","line":64,"column":6,"nodeType":"172","endLine":64,"endColumn":12,"suggestions":"177"},{"ruleId":"161","severity":1,"message":"178","line":21,"column":15,"nodeType":"163","messageId":"164","endLine":21,"endColumn":23},{"ruleId":"170","severity":1,"message":"174","line":32,"column":6,"nodeType":"172","endLine":32,"endColumn":13,"suggestions":"179"},{"ruleId":"170","severity":1,"message":"176","line":19,"column":6,"nodeType":"172","endLine":19,"endColumn":12,"suggestions":"180"},{"ruleId":"165","severity":1,"message":"166","line":37,"column":9,"nodeType":"167","endLine":37,"endColumn":46},{"ruleId":"181","severity":1,"message":"182","line":18,"column":31,"nodeType":"183","messageId":"184","endLine":18,"endColumn":32,"suggestions":"185"},{"ruleId":"181","severity":1,"message":"182","line":18,"column":47,"nodeType":"183","messageId":"184","endLine":18,"endColumn":48,"suggestions":"186"},{"ruleId":"161","severity":1,"message":"187","line":1,"column":10,"nodeType":"163","messageId":"164","endLine":1,"endColumn":13},{"ruleId":"181","severity":1,"message":"182","line":15,"column":31,"nodeType":"183","messageId":"184","endLine":15,"endColumn":32,"suggestions":"188"},{"ruleId":"181","severity":1,"message":"182","line":15,"column":47,"nodeType":"183","messageId":"184","endLine":15,"endColumn":48,"suggestions":"189"},{"ruleId":"168","severity":1,"message":"190","line":17,"column":11,"nodeType":"167","endLine":17,"endColumn":23},{"ruleId":"168","severity":1,"message":"190","line":20,"column":11,"nodeType":"167","endLine":20,"endColumn":23},{"ruleId":"168","severity":1,"message":"190","line":23,"column":11,"nodeType":"167","endLine":23,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":24,"column":31,"nodeType":"183","messageId":"184","endLine":24,"endColumn":32,"suggestions":"191"},{"ruleId":"181","severity":1,"message":"182","line":24,"column":47,"nodeType":"183","messageId":"184","endLine":24,"endColumn":48,"suggestions":"192"},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.","ArrayExpression",["195"],"React Hook useEffect has missing dependencies: 'id' and 'isLogin'. Either include them or remove the dependency array.",["196"],"React Hook useEffect has a missing dependency: 'isLogin'. Either include it or remove the dependency array.",["197"],"'response' is assigned a value but never used.",["198"],["199"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["200","201"],["202","203"],"'fas' is defined but never used.",["204","205"],["206","207"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",["208","209"],["210","211"],"no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"214","fix":"218"},{"desc":"216","fix":"219"},{"messageId":"220","fix":"221","desc":"222"},{"messageId":"223","fix":"224","desc":"225"},{"messageId":"220","fix":"226","desc":"222"},{"messageId":"223","fix":"227","desc":"225"},{"messageId":"220","fix":"228","desc":"222"},{"messageId":"223","fix":"229","desc":"225"},{"messageId":"220","fix":"230","desc":"222"},{"messageId":"223","fix":"231","desc":"225"},{"messageId":"220","fix":"232","desc":"222"},{"messageId":"223","fix":"233","desc":"225"},{"messageId":"220","fix":"234","desc":"222"},{"messageId":"223","fix":"235","desc":"225"},"Update the dependencies array to be: [productId]",{"range":"236","text":"237"},"Update the dependencies array to be: [id, isLogin, items]",{"range":"238","text":"239"},"Update the dependencies array to be: [cart, isLogin]",{"range":"240","text":"241"},{"range":"242","text":"239"},{"range":"243","text":"241"},"removeEscape",{"range":"244","text":"245"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"246","text":"247"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"248","text":"245"},{"range":"249","text":"247"},{"range":"250","text":"245"},{"range":"251","text":"247"},{"range":"252","text":"245"},{"range":"253","text":"247"},{"range":"254","text":"245"},{"range":"255","text":"247"},{"range":"256","text":"245"},{"range":"257","text":"247"},[1465,1467],"[productId]",[1948,1955],"[id, isLogin, items]",[2202,2208],"[cart, isLogin]",[1003,1010],[708,714],[598,599],"",[598,598],"\\",[614,615],[614,614],[558,559],[558,558],[574,575],[574,574],[1023,1024],[1023,1023],[1039,1040],[1039,1039]]